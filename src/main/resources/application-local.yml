spring:
  config:
    activate:
      on-profile: local
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/dodal
    username: ${LOCAL_MYSQL_USERNAME}
    password: ${LOCAL_MYSQL_PASSWORD}
  redis:
    host: localhost
    port: 6379
  jackson:
    serialization:
      fail-on-empty-beans: false
  jpa:
#    show-sql: true
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    properties:
      hibernate:
#        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
  sql:
    init:
      mode: always
      encoding: utf-8
      platform: mysql
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BROKER_INFO}
      # 식별 가능한 Consumer Group Id
      group-id: dodal-push
      # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
      # latest: 가장 최근에 생산된 메시지로 offeset reset
      # earliest: 가장 오래된 메시지로 offeset reset
      # none: offset 정보가 없으면 Exception 발생
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.dodal.meet.*
    producer:
      bootstrap-servers: ${KAFKA_BROKER_INFO}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      push: fcm-local

server:
  url: http://localhost:8080
  ip: 127.0.0.1

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: dodal-s3-dev
    region:
      static: ap-northeast-2
    stack:
      auto: false

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error


